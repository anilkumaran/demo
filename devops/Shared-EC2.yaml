AWSTemplateFormatVersion: '2010-09-09'
Description: Real-time Employee Management Infra
Parameters:
  InstanceName:
    Type: String
    Default: demo-ecom-app
  Env:
    Type: String
    AllowedValues:
      - prod
      - uat
Resources:
  # EC2 Instance for Flask + Apache
  FlaskEC2Instance:
    Type: 'AWS::EC2::Instance'
    Properties: 
      InstanceType: 't2.small'
      ImageId: ami-0522ab6e1ddcc7055  #ubuntu 22.04 LTS
      KeyName: 'ak-instance-kp'
      SecurityGroups: 
        - Ref: AppSG
      UserData:
        Fn::Base64: |
          #!/bin/bash
          sudo apt update -y
          
          # Install Docker
          for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do sudo apt-get remove $pkg; done
          
          sudo apt-get update
          sudo apt-get install ca-certificates curl -y
          sudo install -m 0755 -d /etc/apt/keyrings
          sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
          sudo chmod a+r /etc/apt/keyrings/docker.asc

          # Add the repository to Apt sources:
          echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
            $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
            sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update

          sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
          sudo docker run hello-world
          sudo usermod -aG docker ubuntu
          
          # sudo apt install python3-pip
          # pip3 install flask
          # systemctl enable httpd
          # systemctl start httpd
          # # Clone your Flask app and run it
          # cd /var/www/html
          # git clone https://github.com/your-repo/employee-management.git
          # cd employee-management
          # python3 app.py &
      Tags:
        - Key: Name
          Value: !Sub '${InstanceName}-${Env}'
  AppSG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Enable HTTP access'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
